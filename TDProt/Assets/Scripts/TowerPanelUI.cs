using UnityEngine;
using UnityEngine.UI;
using TMPro;

public class TowerPanelUI : MonoBehaviour
{
    [Header("Root")]
    public GameObject panelRoot;

    [Header("Basic texts")]
    public TextMeshProUGUI titleText;
    public TextMeshProUGUI levelText;

    [Header("Upgrade icons (3)")]
    public Image[] upgradeIconImages = new Image[3];
    public Button[] upgradeIconButtons = new Button[3];
    public TextMeshProUGUI[] upgradeIconCostTexts = new TextMeshProUGUI[3];

    [Header("Sell")]
    public TextMeshProUGUI sellPriceText;
    public Button sellButton;

    [Header("Classic upgrade (single button)")]
    public GameObject classicUpgradeContainer; // root ??? ?????? ????????????? ???????? (??????????/????????)
    public Button classicUpgradeButton;
    public Image classicUpgradeImage; // ???????? ?????? ??????
    public TextMeshProUGUI classicUpgradeCostText; // ???? ????????

    private Tower _current;

    private void Awake()
    {
        if (classicUpgradeButton != null) classicUpgradeButton.onClick.AddListener(OnClassicUpgradePressed);
        if (panelRoot != null) panelRoot.SetActive(false);

        // ????????? ??????????? ??? ??????
        for (int i = 0; i < upgradeIconButtons.Length; i++)
        {
            int idx = i;
            if (upgradeIconButtons[idx] != null)
                upgradeIconButtons[idx].onClick.AddListener(() => OnUpgradeIconPressed(idx));
        }
        if (sellButton != null) sellButton.onClick.AddListener(OnSellPressed);
    }

    public void ShowForTower(Tower tower)
    {
        _current = tower;
        if (panelRoot != null) panelRoot.SetActive(true);
        Refresh();
    }



    public void Hide()
    {
        _current = null;
        if (panelRoot != null) panelRoot.SetActive(false);
    }

    public void Refresh()
    {
        if (_current == null) { Hide(); return; }
        if (_current.gameObject == null) { Hide(); return; }

        // ... ???????????? ??? ??? ?????????/??????/????? ...

        // --- ???????????? ??????? ---
        if (classicUpgradeContainer != null)
        {
            if (_current.CurrentLevel >= _current.MaxLevel)
            {
                // ????????? ???????? — ???????? ?????????
                classicUpgradeContainer.SetActive(false);
            }
            else
            {
                // ?????????? ????????? ? ????????? ??????
                classicUpgradeContainer.SetActive(true);
                Sprite icon = _current.GetClassicUpgradeIcon();
                if (classicUpgradeImage != null)
                {
                    classicUpgradeImage.sprite = icon;
                    classicUpgradeImage.color = icon != null ? Color.white : new Color(1, 1, 1, 0.0f);
                }

                int cost = _current.GetUpgradeCost();
                if (classicUpgradeCostText != null) classicUpgradeCostText.text = cost > 0 ? $"{cost}" : "-";

                // ??????????? ??????
                if (classicUpgradeButton != null)
                    classicUpgradeButton.interactable = _current.HasClassicUpgradeAvailable();
            }
        }

        var opts = _current.GetUpgradeOptions();
        for (int i = 0; i < upgradeIconImages.Length; i++)
        {
            if (i < opts.Length && opts[i] != null)
            {
                var opt = opts[i];
                if (upgradeIconImages[i] != null) upgradeIconImages[i].sprite = opt.icon;
                if (upgradeIconCostTexts[i] != null) upgradeIconCostTexts[i].text = $"{opt.cost}";
                if (upgradeIconButtons[i] != null)
                {
                    bool used = _current.IsOptionUsed(i);
                    bool can = _current.CanApplyOption(i);
                    upgradeIconButtons[i].interactable = !used && can;
                    // ????????? ????????? ???? ??? ????????????
                    upgradeIconImages[i].color = used ? new Color(0.6f, 0.6f, 0.6f, 1f) : Color.white;
                }
            }
            else
            {
                // ????????????? ????? — ???????? ??????/??????
                if (upgradeIconImages[i] != null) upgradeIconImages[i].sprite = null;
                if (upgradeIconCostTexts[i] != null) upgradeIconCostTexts[i].text = "-";
                if (upgradeIconButtons[i] != null) upgradeIconButtons[i].interactable = false;
                if (upgradeIconImages[i] != null) upgradeIconImages[i].color = new Color(0.6f, 0.6f, 0.6f, 0.5f);
            }
        }

        if (sellPriceText != null) sellPriceText.text = $"Sell: {_current.GetSellPrice()}";
        if (sellButton != null) sellButton.interactable = true;
    }

    private void OnUpgradeIconPressed(int index)
    {
        if (_current == null) return;

        // ????????? ????? ? ???????? ??????, ??????? ?????? ???????????? ????? (this ??? ?????)
        Tower returned = _current.ApplyUpgradeOption(index);

        if (returned == null)
        {
            // ?????? ??? ??????; ???????? ?????? ????? ?? ????????? ?? ????????? ?????
            Debug.LogWarning("OnUpgradeIconPressed: upgrade replaced tower but new instance is null. Hiding panel.");
            Hide();
            return;
        }

        // ???? ???????? ?????? ????????? (?????? ???????), ????????? ?????? ? ??????
        if (returned != _current)
        {
            _current = returned;
        }

        // ????????? ??????????? ?????? (??????, ??????????? ?????? ? ?.?.)
        Refresh();
    }

    private void OnSellPressed()
    {
        if (_current == null) return;
        _current.Sell();
        Hide();
    }

    private void OnClassicUpgradePressed()
    {
        if (_current == null) return;

        // ???????? ???????????
        _current.Upgrade();

        // ????????? UI — ???? ??????? ?? ????????? (??? ?????) ?? ?????? ?? ?????????
        // ?? Refresh() ??????? ????????????: ?????? ????????? ??? ????????? ???????? ??? max level
        Refresh();
    }
}